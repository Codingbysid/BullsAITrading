name: QuantAI Trading Platform CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-gate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e ".[dev]"
    
    - name: Run code formatting check
      run: |
        black --check src/ apps/ tests/
        isort --check-only src/ apps/ tests/
    
    - name: Run linting
      run: |
        flake8 src/ apps/ tests/
        mypy src/ apps/
    
    - name: Run security checks
      run: |
        bandit -r src/ apps/
        safety check
    
    - name: Run tests
      run: |
        pytest tests/ --cov=src --cov=apps --cov-report=xml --cov-report=html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  backtesting:
    runs-on: ubuntu-latest
    needs: quality-gate
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    
    - name: Run simple backtest
      run: |
        python apps/backtesting/backtesters/simple_backtest.py
    
    - name: Run standalone backtest
      run: |
        python apps/backtesting/backtesters/standalone_backtest.py
    
    - name: Run advanced backtest
      run: |
        python apps/backtesting/backtesters/advanced_quantitative_backtester.py
    
    - name: Run focused backtest
      run: |
        python apps/backtesting/backtesters/focused_5_ticker_backtester.py

  performance:
    runs-on: ubuntu-latest
    needs: quality-gate
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    
    - name: Run performance tests
      run: |
        pytest tests/ -m performance --durations=10
    
    - name: Run memory profiling
      run: |
        python -m memory_profiler scripts/performance_test.py

  documentation:
    runs-on: ubuntu-latest
    needs: quality-gate
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install sphinx sphinx-rtd-theme
    
    - name: Build documentation
      run: |
        sphinx-build -b html docs/ docs/_build/html
    
    - name: Deploy documentation
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html

  security-scan:
    runs-on: ubuntu-latest
    needs: quality-gate
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install bandit safety
    
    - name: Run security scan
      run: |
        bandit -r src/ apps/ -f json -o bandit-report.json
        safety check --json --output safety-report.json
    
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  build:
    runs-on: ubuntu-latest
    needs: [quality-gate, backtesting, performance]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  deploy:
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Deploy to PyPI
      if: github.event_name == 'push'
      run: |
        echo "Deploying to PyPI..."
        # Add PyPI deployment logic here
    
    - name: Deploy to production
      if: github.event_name == 'push'
      run: |
        echo "Deploying to production..."
        # Add production deployment logic here
